{% include('includes/license_blurb_hashes.jinja') %}"""Utility functions for downloading files."""


import pathlib
from typing import Union

import requests
from tqdm import tqdm

CHUNK_SIZE = 16384


def download_http(url: str, output_path: Union[str, pathlib.Path]) -> None:
    """Download a file from a URL to a local path."""
    print(f"Downloading {url!r} to {output_path}...")

    response = requests.get(url, stream=True, timeout=30)
    response.raise_for_status()

    total_size = int(response.headers.get("content-length", 0))

    if (
        pathlib.Path(output_path).exists()
        and pathlib.Path(output_path).stat().st_size == total_size
    ):
        print("  File already downloaded.")
        return

    progress_bar = tqdm(total=total_size, unit="B", unit_scale=True)

    with open(output_path, "wb") as file:
        for chunk in response.iter_content(chunk_size=CHUNK_SIZE):
            file.write(chunk)
            progress_bar.update(len(chunk))

    progress_bar.close()

    print("  Download complete.")


__all__ = ["download_http"]
